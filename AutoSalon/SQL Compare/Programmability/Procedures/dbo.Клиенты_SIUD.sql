SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[Клиенты_SIUD]
    @UIDКлиента UNIQUEIDENTIFIER = NULL,
    @Фамилия VARCHAR(200) = NULL,
    @Имя VARCHAR(200) = NULL,
    @Отчество VARCHAR(200) = NULL,
    @ПДСерия VARCHAR(10) = NULL,
    @ПДНомер VARCHAR(10) = NULL,
    @ПДКодПодразделения VARCHAR(10) = NULL,
    @ПДДатаВыдачи DATE = NULL,
    @ПДДатаРождения DATE = NULL,
    @IdПола TINYINT = NULL,
    @ПДКемВыдан VARCHAR(300) = NULL,
    @АдресРегистрации VARCHAR(300) = NULL,
    @Телефон VARCHAR(20) = NULL,
    @Email VARCHAR(50) = NULL,
    @Function TINYINT = 0
AS 
BEGIN 
    
    -- для формы
    IF @Function = 0 
    BEGIN  
       	SELECT кд.UIDКлиента
              ,dbo.КлиентПолучитьФИО(кд.UIDКлиента) AS [ФИО клиента]
              ,кд.[Номер телефона]
              ,кд.Email
              ,кд.[ПД Серия]
              ,кд.[ПД Номер]
              ,кд.[ПД Дата выдачи]
              ,кд.[ПД Кем выдан]
              ,кд.[ПД Код подразделения]
              ,кд.[ПД Дата рождения]
              ,кп.Наименование AS [Пол клиента]
              ,кд.[Адрес регистрации]
              ,кд.[Дата добавления]
              ,dbo.ШтатПолучитьФИОкратко(кд.UIDАвтора) AS [Автор записи]
              ,кд.[Дата изменения]
              ,dbo.ШтатПолучитьФИОкратко(кд.UIDИзменяющего) AS [Автор изменений]
        FROM КлиентыДанные кд
        INNER JOIN КлиентыПол кп 
            ON кд.IdПола = кп.IdПола
        ORDER BY [ФИО клиента]
    END
        
    -- select
    IF @Function = 1 
    BEGIN   
       	SELECT кд.UIDКлиента
              ,кд.Фамилия
              ,кд.Имя
              ,кд.Отчество
              ,кд.[ПД Серия]
              ,кд.[ПД Номер]
              ,кд.[ПД Дата выдачи]
              ,кд.[ПД Кем выдан]
              ,кд.[ПД Код подразделения]
              ,кд.[ПД Дата рождения]
              ,кд.IdПола
              ,кд.[Адрес регистрации]
              ,кд.[Номер телефона]
              ,кд.Email
        FROM КлиентыДанные кд
        WHERE кд.UIDКлиента = @UIDКлиента
    END
        
    -- insert
    IF @Function = 2 
    BEGIN  
        BEGIN TRANSACTION 
        
        SET @UIDКлиента = NEWID()
        INSERT КлиентыДанные 
        (
            UIDКлиента, 
            Фамилия, 
            Имя, 
            Отчество, 
            [ПД Серия], 
            [ПД Номер], 
            [ПД Дата выдачи], 
            [ПД Кем выдан], 
            [ПД Код подразделения], 
            [ПД Дата рождения], 
            IdПола, 
            [Адрес регистрации], 
            [Номер телефона], 
            Email
        )
        VALUES 
        (
            @UIDКлиента, 
            @Фамилия, 
            @Имя, 
            @Отчество, 
            @ПДСерия, 
            @ПДНомер, 
            @ПДДатаВыдачи, 
            @ПДКемВыдан, 
            @ПДКодПодразделения, 
            @ПДДатаРождения, 
            @IdПола, 
            @АдресРегистрации, 
            @Телефон, 
            @Email
        )

        COMMIT TRANSACTION
    END
        
    -- update
    IF @Function = 3 
    BEGIN  
        BEGIN TRANSACTION 

        UPDATE КлиентыДанные 
        SET UIDКлиента = DEFAULT
           ,Фамилия = @Фамилия
           ,Имя = @Имя
           ,Отчество = @Отчество
           ,[ПД Серия] = @ПДСерия
           ,[ПД Номер] = @ПДНомер
           ,[ПД Дата выдачи] = @ПДДатаВыдачи
           ,[ПД Кем выдан] = @ПДКемВыдан
           ,[ПД Код подразделения] = @ПДКодПодразделения
           ,[ПД Дата рождения] = @ПДДатаРождения
           ,IdПола = @IdПола
           ,[Адрес регистрации] = @АдресРегистрации
           ,[Номер телефона] = @Телефон
           ,Email = @Email
           ,[Дата изменения] = dbo.DtТекущаяДатаВремя()
           ,UIDИзменяющего = dbo.ШтатПолучитьUIDСотрудника()
        WHERE UIDКлиента = @UIDКлиента

        COMMIT TRANSACTION
    END
        
    -- delete
    IF @Function = 4 
    BEGIN  
        BEGIN TRANSACTION 

        DELETE FROM КлиентыДанные
        WHERE UIDКлиента = @UIDКлиента
        
        COMMIT TRANSACTION
    END	
    
    IF @Function IN (2, 3) BEGIN SELECT @UIDКлиента END 

END
GO